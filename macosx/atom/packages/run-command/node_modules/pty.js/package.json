{
  "_args": [
    [
      {
        "raw": "pty.js@https://github.com/chjj/pty.js/archive/master.tar.gz",
        "scope": null,
        "escapedName": "pty.js",
        "name": "pty.js",
        "rawSpec": "https://github.com/chjj/pty.js/archive/master.tar.gz",
        "spec": "https://github.com/chjj/pty.js/archive/master.tar.gz",
        "type": "remote"
      },
      "/private/var/folders/vd/ttw9r6ls0xbdvvgh6jmgdgv00000gn/T/d-117520-50000-11qdpj2.q60oz5b3xr/package.tgz"
    ]
  ],
  "_from": "https://github.com/chjj/pty.js/archive/master.tar.gz",
  "_id": "pty.js@0.3.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/run-command/pty.js",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pty.js@https://github.com/chjj/pty.js/archive/master.tar.gz",
    "scope": null,
    "escapedName": "pty.js",
    "name": "pty.js",
    "rawSpec": "https://github.com/chjj/pty.js/archive/master.tar.gz",
    "spec": "https://github.com/chjj/pty.js/archive/master.tar.gz",
    "type": "remote"
  },
  "_requiredBy": [
    "/run-command"
  ],
  "_resolved": "https://github.com/chjj/pty.js/archive/master.tar.gz",
  "_shasum": "2c5230ccf9b66bc3f442189b8360009154b955f9",
  "_shrinkwrap": null,
  "_spec": "pty.js@https://github.com/chjj/pty.js/archive/master.tar.gz",
  "_where": "/private/var/folders/vd/ttw9r6ls0xbdvvgh6jmgdgv00000gn/T/d-117520-50000-11qdpj2.q60oz5b3xr/package.tgz",
  "author": {
    "name": "Christopher Jeffrey"
  },
  "bugs": {
    "url": "https://github.com/chjj/pty.js/issues"
  },
  "dependencies": {
    "extend": "~1.2.1",
    "nan": "2.3.5"
  },
  "description": "Pseudo terminals for node.",
  "devDependencies": {
    "mocha": "~1.17.1"
  },
  "gypfile": true,
  "homepage": "https://github.com/chjj/pty.js",
  "keywords": [
    "pty",
    "tty",
    "terminal"
  ],
  "license": "MIT",
  "main": "./index.js",
  "name": "pty.js",
  "optionalDependencies": {},
  "readme": "# pty.js\n\n`forkpty(3)` bindings for node.js. This allows you to fork processes with pseudo\nterminal file descriptors. It returns a terminal object which allows reads\nand writes.\n\nThis is useful for:\n\n- Writing a terminal emulator.\n- Getting certain programs to *think* you're a terminal. This is useful if\n  you need a program to send you control sequences.\n\n## Example Usage\n\n``` js\nvar pty = require('pty.js');\n\nvar term = pty.spawn('bash', [], {\n  name: 'xterm-color',\n  cols: 80,\n  rows: 30,\n  cwd: process.env.HOME,\n  env: process.env\n});\n\nterm.on('data', function(data) {\n  console.log(data);\n});\n\nterm.write('ls\\r');\nterm.resize(100, 40);\nterm.write('ls /\\r');\n\nconsole.log(term.process);\n```\n\n## Todo\n\n- Add tcsetattr(3), tcgetattr(3).\n- Add a way of determining the current foreground job for platforms other\n  than Linux and OSX/Darwin.\n\n## Contribution and License Agreement\n\nIf you contribute code to this project, you are implicitly allowing your code\nto be distributed under the MIT license. You are also implicitly verifying that\nall code is your original work. `</legalese>`\n\n## License\n\nCopyright (c) 2012-2015, Christopher Jeffrey (MIT License).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/chjj/pty.js.git"
  },
  "scripts": {
    "install": "node-gyp rebuild",
    "test": "NODE_ENV=test mocha -R spec"
  },
  "tags": [
    "pty",
    "tty",
    "terminal"
  ],
  "version": "0.3.1"
}
