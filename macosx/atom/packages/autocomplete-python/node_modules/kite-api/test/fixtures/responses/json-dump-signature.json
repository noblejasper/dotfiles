{
  "language":"python",
  "calls":[
    {
      "callee":{
        "id":"python;json.dump",
        "kind":"function",
        "repr":"json.dump",
        "type":"",
        "type_id":"",
        "synopsis":"Serialize obj as a JSON formatted stream to fp (a .write()-supporting\nfile-like object) using this conversion table.\nIf skipkeys is True (default: False), then dict keys that are not\nof a basic type (str, unicode, int, long,\nfloat, bool, None) will be skipped instead of raising a\nTypeError.\nIf ensure_ascii is True (the default), all non-ASCII characters in the\noutput are escaped with \\uXXXX sequences, and the result is a\nstr instance consisting of ASCII characters only.  If\nensure_ascii is False, some chunks written to fp may be\nunicode instances.  This usually happens because the input contains\nunicode strings or the encoding parameter is used.  Unless fp.write()\nexplicitly understands unicode (as in codecs.getwriter())\nthis is likely to cause an error.\nIf check_circular is False (default: True), then the circular\nreference check for container types will be skipped and a circular reference\nwill result in an OverflowError (or worse).\nIf allow_nan is False (default: True), then it will be a\nValueError to serialize out of range float values (nan,\ninf, -inf) in strict compliance of the JSON specification, instead of\nusing the JavaScript equivalents (NaN, Infinity, -Infinity).\nIf indent is a non-negative integer, then JSON array elements and object\nmembers will be pretty-printed with that indent level.  An indent level of 0,\nor negative, will only insert newlines.  None (the default) selects the\nmost compact representation.\nNote\nSince the default item separator is ', ',  the output might include\ntrailing whitespace when indent is specified.  You can use\nseparators=(',', ': ') to avoid this.\nIf separators is an (item_separator, dict_separator) tuple, then it\nwill be used instead of the default (', ', ': ') separators.  (',',\n':') is the most compact JSON representation.\nencoding is the character encoding for str instances, default is UTF-8.\ndefault(obj) is a function that should return a serializable version of\nobj or raise TypeError.  The default simply raises TypeError.\nIf sort_keys is True (default: False), then the output of\ndictionaries will be sorted by key.\nTo use a custom JSONEncoder subclass (e.g. one that overrides the\ndefault() method to serialize additional types), specify it with the\ncls kwarg; otherwise JSONEncoder is used.\nNote\nUnlike pickle and marshal, JSON is not a framed protocol so\ntrying to serialize more objects with repeated calls to dump() and\nthe same fp will result in an invalid JSON file.",
        "details":{
          "function":{
            "parameters":[
              {
                "name":"obj",
                "inferred_value":null,
                "synopsis":"",
                "language_details":{
                  "python":{
                    "default_value":null,
                    "annotation":null,
                    "keyword_only":false
                  }
                }
              },
              {
                "name":"fp",
                "inferred_value":null,
                "synopsis":"",
                "language_details":{
                  "python":{
                    "default_value":null,
                    "annotation":null,
                    "keyword_only":false
                  }
                }
              },
              {
                "name":"skipkeys",
                "inferred_value":null,
                "synopsis":"",
                "language_details":{
                  "python":{
                    "default_value":[
                      {
                        "id":"python;__builtin__.False",
                        "kind":"instance",
                        "repr":"false",
                        "type":"bool",
                        "type_id":"python;__builtin__.bool"
                      }
                    ],
                    "annotation":null,
                    "keyword_only":false
                  }
                }
              },
              {
                "name":"ensure_ascii",
                "inferred_value":null,
                "synopsis":"",
                "language_details":{
                  "python":{
                    "default_value":[
                      {
                        "id":"python;__builtin__.True",
                        "kind":"instance",
                        "repr":"true",
                        "type":"bool",
                        "type_id":"python;__builtin__.bool"
                      }
                    ],
                    "annotation":null,
                    "keyword_only":false
                  }
                }
              },
              {
                "name":"check_circular",
                "inferred_value":null,
                "synopsis":"",
                "language_details":{
                  "python":{
                    "default_value":[
                      {
                        "id":"python;__builtin__.True",
                        "kind":"instance",
                        "repr":"true",
                        "type":"bool",
                        "type_id":"python;__builtin__.bool"
                      }
                    ],
                    "annotation":null,
                    "keyword_only":false
                  }
                }
              },
              {
                "name":"allow_nan",
                "inferred_value":null,
                "synopsis":"",
                "language_details":{
                  "python":{
                    "default_value":[
                      {
                        "id":"python;__builtin__.True",
                        "kind":"instance",
                        "repr":"true",
                        "type":"bool",
                        "type_id":"python;__builtin__.bool"
                      }
                    ],
                    "annotation":null,
                    "keyword_only":false
                  }
                }
              },
              {
                "name":"cls",
                "inferred_value":null,
                "synopsis":"",
                "language_details":{
                  "python":{
                    "default_value":[
                      {
                        "id":"python;__builtin__.None",
                        "kind":"instance",
                        "repr":"None",
                        "type":"NoneType",
                        "type_id":"python;types.NoneType"
                      }
                    ],
                    "annotation":null,
                    "keyword_only":false
                  }
                }
              },
              {
                "name":"indent",
                "inferred_value":null,
                "synopsis":"",
                "language_details":{
                  "python":{
                    "default_value":[
                      {
                        "id":"python;__builtin__.None",
                        "kind":"instance",
                        "repr":"None",
                        "type":"NoneType",
                        "type_id":"python;types.NoneType"
                      }
                    ],
                    "annotation":null,
                    "keyword_only":false
                  }
                }
              },
              {
                "name":"separators",
                "inferred_value":null,
                "synopsis":"",
                "language_details":{
                  "python":{
                    "default_value":[
                      {
                        "id":"python;__builtin__.None",
                        "kind":"instance",
                        "repr":"None",
                        "type":"NoneType",
                        "type_id":"python;types.NoneType"
                      }
                    ],
                    "annotation":null,
                    "keyword_only":false
                  }
                }
              },
              {
                "name":"encoding",
                "inferred_value":null,
                "synopsis":"",
                "language_details":{
                  "python":{
                    "default_value":[
                      {
                        "id":"",
                        "kind":"instance",
                        "repr":"\"utf-8\"",
                        "type":"str",
                        "type_id":"python;__builtin__.str"
                      }
                    ],
                    "annotation":null,
                    "keyword_only":false
                  }
                }
              },
              {
                "name":"default",
                "inferred_value":null,
                "synopsis":"",
                "language_details":{
                  "python":{
                    "default_value":[
                      {
                        "id":"python;__builtin__.None",
                        "kind":"instance",
                        "repr":"None",
                        "type":"NoneType",
                        "type_id":"python;types.NoneType"
                      }
                    ],
                    "annotation":null,
                    "keyword_only":false
                  }
                }
              },
              {
                "name":"sort_keys",
                "inferred_value":null,
                "synopsis":"",
                "language_details":{
                  "python":{
                    "default_value":[
                      {
                        "id":"python;__builtin__.False",
                        "kind":"instance",
                        "repr":"false",
                        "type":"bool",
                        "type_id":"python;__builtin__.bool"
                      }
                    ],
                    "annotation":null,
                    "keyword_only":false
                  }
                }
              }
            ],
            "return_value":null,
            "signatures":[
              {
                "args":[
                  {
                    "name":"obj",
                    "types":[
                      {
                        "id":"python;__builtin__.dict",
                        "name":"dict",
                        "examples":[
                          "{}",
                          "{\"access_token\": access_token,\"access_secret\": access_secret}",
                          "{\"data\": _CACHE, \"metadata\": \"\"}"
                        ]
                      },
                      {
                        "id":"python;__builtin__.list",
                        "name":"list",
                        "examples":[
                          "[]",
                          "['chrome']",
                          "[test_cost, test_accuracy, training_cost, training_accuracy]"
                        ]
                      },
                      {
                        "id":"python;...",
                        "name":"",
                        "examples":null
                      }
                    ]
                  },
                  {
                    "name":"fp",
                    "types":[
                      {
                        "id":"python;__builtin__.file",
                        "name":"file",
                        "examples":[
                          "open(output, 'w') if output is not None else sys.stdout",
                          "open(args.output_file, 'w') if args.output_file else sys.stdout",
                          "sys.stdout if not optz.dst_file else open(optz.dst_file, 'wb')"
                        ]
                      }
                    ]
                  }
                ],
                "language_details":{
                  "python":{
                    "kwargs":null
                  }
                }
              },
              {
                "args":[
                  {
                    "name":"obj",
                    "types":[
                      {
                        "id":"python;__builtin__.dict",
                        "name":"dict",
                        "examples":[
                          "{}",
                          "{\"access_token\": access_token,\"access_secret\": access_secret}",
                          "{\"data\": _CACHE, \"metadata\": \"\"}"
                        ]
                      },
                      {
                        "id":"python;__builtin__.list",
                        "name":"list",
                        "examples":[
                          "[]",
                          "['chrome']",
                          "[test_cost, test_accuracy, training_cost, training_accuracy]"
                        ]
                      },
                      {
                        "id":"python;...",
                        "name":"",
                        "examples":null
                      }
                    ]
                  },
                  {
                    "name":"fp",
                    "types":[
                      {
                        "id":"python;__builtin__.file",
                        "name":"file",
                        "examples":[
                          "open(output, 'w') if output is not None else sys.stdout",
                          "open(args.output_file, 'w') if args.output_file else sys.stdout",
                          "sys.stdout if not optz.dst_file else open(optz.dst_file, 'wb')"
                        ]
                      }
                    ]
                  }
                ],
                "language_details":{
                  "python":{
                    "kwargs":[
                      {
                        "name":"indent",
                        "types":[
                          {
                            "id":"python;__builtin__.int",
                            "name":"int",
                            "examples":[
                              "4",
                              "2",
                              "1"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "args":[
                  {
                    "name":"obj",
                    "types":[
                      {
                        "id":"python;__builtin__.dict",
                        "name":"dict",
                        "examples":[
                          "{}",
                          "{\"access_token\": access_token,\"access_secret\": access_secret}",
                          "{\"data\": _CACHE, \"metadata\": \"\"}"
                        ]
                      },
                      {
                        "id":"python;__builtin__.list",
                        "name":"list",
                        "examples":[
                          "[]",
                          "['chrome']",
                          "[test_cost, test_accuracy, training_cost, training_accuracy]"
                        ]
                      },
                      {
                        "id":"python;...",
                        "name":"",
                        "examples":null
                      }
                    ]
                  },
                  {
                    "name":"fp",
                    "types":[
                      {
                        "id":"python;__builtin__.file",
                        "name":"file",
                        "examples":[
                          "open(output, 'w') if output is not None else sys.stdout",
                          "open(args.output_file, 'w') if args.output_file else sys.stdout",
                          "sys.stdout if not optz.dst_file else open(optz.dst_file, 'wb')"
                        ]
                      }
                    ]
                  }
                ],
                "language_details":{
                  "python":{
                    "kwargs":[
                      {
                        "name":"indent",
                        "types":[
                          {
                            "id":"python;__builtin__.int",
                            "name":"int",
                            "examples":[
                              "4",
                              "2",
                              "1"
                            ]
                          }
                        ]
                      },
                      {
                        "name":"sort_keys",
                        "types":[
                          {
                            "id":"python;__builtin__.bool",
                            "name":"bool",
                            "examples":null
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "args":[
                  {
                    "name":"obj",
                    "types":[
                      {
                        "id":"python;__builtin__.dict",
                        "name":"dict",
                        "examples":[
                          "{}",
                          "{\"access_token\": access_token,\"access_secret\": access_secret}",
                          "{\"data\": _CACHE, \"metadata\": \"\"}"
                        ]
                      },
                      {
                        "id":"python;__builtin__.list",
                        "name":"list",
                        "examples":[
                          "[]",
                          "['chrome']",
                          "[test_cost, test_accuracy, training_cost, training_accuracy]"
                        ]
                      },
                      {
                        "id":"python;...",
                        "name":"",
                        "examples":null
                      }
                    ]
                  },
                  {
                    "name":"fp",
                    "types":[
                      {
                        "id":"python;__builtin__.file",
                        "name":"file",
                        "examples":[
                          "open(output, 'w') if output is not None else sys.stdout",
                          "open(args.output_file, 'w') if args.output_file else sys.stdout",
                          "sys.stdout if not optz.dst_file else open(optz.dst_file, 'wb')"
                        ]
                      }
                    ]
                  }
                ],
                "language_details":{
                  "python":{
                    "kwargs":[
                      {
                        "name":"indent",
                        "types":[
                          {
                            "id":"python;__builtin__.int",
                            "name":"int",
                            "examples":[
                              "4",
                              "2",
                              "1"
                            ]
                          }
                        ]
                      },
                      {
                        "name":"sort_keys",
                        "types":[
                          {
                            "id":"python;__builtin__.bool",
                            "name":"bool",
                            "examples":null
                          }
                        ]
                      },
                      {
                        "name":"separators",
                        "types":[
                          {
                            "id":"python;__builtin__.tuple",
                            "name":"tuple",
                            "examples":[
                              "(',', ': ')",
                              "(',', ':')",
                              "(',',':')"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "args":[
                  {
                    "name":"obj",
                    "types":[
                      {
                        "id":"python;__builtin__.dict",
                        "name":"dict",
                        "examples":[
                          "{}",
                          "{\"access_token\": access_token,\"access_secret\": access_secret}",
                          "{\"data\": _CACHE, \"metadata\": \"\"}"
                        ]
                      },
                      {
                        "id":"python;__builtin__.list",
                        "name":"list",
                        "examples":[
                          "[]",
                          "['chrome']",
                          "[test_cost, test_accuracy, training_cost, training_accuracy]"
                        ]
                      },
                      {
                        "id":"python;...",
                        "name":"",
                        "examples":null
                      }
                    ]
                  },
                  {
                    "name":"fp",
                    "types":[
                      {
                        "id":"python;__builtin__.file",
                        "name":"file",
                        "examples":[
                          "open(output, 'w') if output is not None else sys.stdout",
                          "open(args.output_file, 'w') if args.output_file else sys.stdout",
                          "sys.stdout if not optz.dst_file else open(optz.dst_file, 'wb')"
                        ]
                      }
                    ]
                  }
                ],
                "language_details":{
                  "python":{
                    "kwargs":[
                      {
                        "name":"indent",
                        "types":[
                          {
                            "id":"python;__builtin__.int",
                            "name":"int",
                            "examples":[
                              "4",
                              "2",
                              "1"
                            ]
                          }
                        ]
                      },
                      {
                        "name":"separators",
                        "types":[
                          {
                            "id":"python;__builtin__.tuple",
                            "name":"tuple",
                            "examples":[
                              "(',', ': ')",
                              "(',', ':')",
                              "(',',':')"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ],
            "language_details":{
              "python":{
                "kwarg":{
                  "name":"kw",
                  "inferred_value":null,
                  "synopsis":"",
                  "language_details":{
                    "python":null
                  }
                },
                "kwarg_parameters":[
                  {
                    "name":"use_decimal",
                    "inferred_value":[
                      {
                        "id":"",
                        "kind":"instance",
                        "repr":"bool",
                        "type":"bool",
                        "type_id":"python;__builtin__.bool"
                      }
                    ],
                    "synopsis":"",
                    "language_details":{
                      "python":null
                    }
                  },
                  {
                    "name":"CWMode",
                    "inferred_value":null,
                    "synopsis":"",
                    "language_details":{
                      "python":null
                    }
                  },
                  {
                    "name":"ident",
                    "inferred_value":[
                      {
                        "id":"",
                        "kind":"instance",
                        "repr":"int",
                        "type":"int",
                        "type_id":"python;__builtin__.int"
                      }
                    ],
                    "synopsis":"",
                    "language_details":{
                      "python":null
                    }
                  },
                  {
                    "name":"indentr",
                    "inferred_value":[
                      {
                        "id":"",
                        "kind":"instance",
                        "repr":"int",
                        "type":"int",
                        "type_id":"python;__builtin__.int"
                      }
                    ],
                    "synopsis":"",
                    "language_details":{
                      "python":null
                    }
                  },
                  {
                    "name":"models",
                    "inferred_value":null,
                    "synopsis":"",
                    "language_details":{
                      "python":null
                    }
                  }
                ],
                "return_annotation":null
              }
            }
          },
          "type":null,
          "instance":null,
          "module":null
        },
        "ancestors":[
          {
            "id":"python;json",
            "name":"json"
          }
        ]
      },
      "signatures":[
        {
          "args":[
            {
              "name":"obj",
              "types":[
                {
                  "id":"python;__builtin__.dict",
                  "name":"dict",
                  "examples":[
                    "{}",
                    "{\"access_token\": access_token,\"access_secret\": access_secret}",
                    "{\"data\": _CACHE, \"metadata\": \"\"}"
                  ]
                },
                {
                  "id":"python;__builtin__.list",
                  "name":"list",
                  "examples":[
                    "[]",
                    "['chrome']",
                    "[test_cost, test_accuracy, training_cost, training_accuracy]"
                  ]
                },
                {
                  "id":"python;...",
                  "name":"",
                  "examples":null
                }
              ]
            },
            {
              "name":"fp",
              "types":[
                {
                  "id":"python;__builtin__.file",
                  "name":"file",
                  "examples":[
                    "open(output, 'w') if output is not None else sys.stdout",
                    "open(args.output_file, 'w') if args.output_file else sys.stdout",
                    "sys.stdout if not optz.dst_file else open(optz.dst_file, 'wb')"
                  ]
                }
              ]
            }
          ],
          "language_details":{
            "python":{
              "kwargs":null
            }
          }
        },
        {
          "args":[
            {
              "name":"obj",
              "types":[
                {
                  "id":"python;__builtin__.dict",
                  "name":"dict",
                  "examples":[
                    "{}",
                    "{\"access_token\": access_token,\"access_secret\": access_secret}",
                    "{\"data\": _CACHE, \"metadata\": \"\"}"
                  ]
                },
                {
                  "id":"python;__builtin__.list",
                  "name":"list",
                  "examples":[
                    "[]",
                    "['chrome']",
                    "[test_cost, test_accuracy, training_cost, training_accuracy]"
                  ]
                },
                {
                  "id":"python;...",
                  "name":"",
                  "examples":null
                }
              ]
            },
            {
              "name":"fp",
              "types":[
                {
                  "id":"python;__builtin__.file",
                  "name":"file",
                  "examples":[
                    "open(output, 'w') if output is not None else sys.stdout",
                    "open(args.output_file, 'w') if args.output_file else sys.stdout",
                    "sys.stdout if not optz.dst_file else open(optz.dst_file, 'wb')"
                  ]
                }
              ]
            }
          ],
          "language_details":{
            "python":{
              "kwargs":[
                {
                  "name":"indent",
                  "types":[
                    {
                      "id":"python;__builtin__.int",
                      "name":"int",
                      "examples":[
                        "4",
                        "2",
                        "1"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "args":[
            {
              "name":"obj",
              "types":[
                {
                  "id":"python;__builtin__.dict",
                  "name":"dict",
                  "examples":[
                    "{}",
                    "{\"access_token\": access_token,\"access_secret\": access_secret}",
                    "{\"data\": _CACHE, \"metadata\": \"\"}"
                  ]
                },
                {
                  "id":"python;__builtin__.list",
                  "name":"list",
                  "examples":[
                    "[]",
                    "['chrome']",
                    "[test_cost, test_accuracy, training_cost, training_accuracy]"
                  ]
                },
                {
                  "id":"python;...",
                  "name":"",
                  "examples":null
                }
              ]
            },
            {
              "name":"fp",
              "types":[
                {
                  "id":"python;__builtin__.file",
                  "name":"file",
                  "examples":[
                    "open(output, 'w') if output is not None else sys.stdout",
                    "open(args.output_file, 'w') if args.output_file else sys.stdout",
                    "sys.stdout if not optz.dst_file else open(optz.dst_file, 'wb')"
                  ]
                }
              ]
            }
          ],
          "language_details":{
            "python":{
              "kwargs":[
                {
                  "name":"indent",
                  "types":[
                    {
                      "id":"python;__builtin__.int",
                      "name":"int",
                      "examples":[
                        "4",
                        "2",
                        "1"
                      ]
                    }
                  ]
                },
                {
                  "name":"sort_keys",
                  "types":[
                    {
                      "id":"python;__builtin__.bool",
                      "name":"bool",
                      "examples":null
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "args":[
            {
              "name":"obj",
              "types":[
                {
                  "id":"python;__builtin__.dict",
                  "name":"dict",
                  "examples":[
                    "{}",
                    "{\"access_token\": access_token,\"access_secret\": access_secret}",
                    "{\"data\": _CACHE, \"metadata\": \"\"}"
                  ]
                },
                {
                  "id":"python;__builtin__.list",
                  "name":"list",
                  "examples":[
                    "[]",
                    "['chrome']",
                    "[test_cost, test_accuracy, training_cost, training_accuracy]"
                  ]
                },
                {
                  "id":"python;...",
                  "name":"",
                  "examples":null
                }
              ]
            },
            {
              "name":"fp",
              "types":[
                {
                  "id":"python;__builtin__.file",
                  "name":"file",
                  "examples":[
                    "open(output, 'w') if output is not None else sys.stdout",
                    "open(args.output_file, 'w') if args.output_file else sys.stdout",
                    "sys.stdout if not optz.dst_file else open(optz.dst_file, 'wb')"
                  ]
                }
              ]
            }
          ],
          "language_details":{
            "python":{
              "kwargs":[
                {
                  "name":"indent",
                  "types":[
                    {
                      "id":"python;__builtin__.int",
                      "name":"int",
                      "examples":[
                        "4",
                        "2",
                        "1"
                      ]
                    }
                  ]
                },
                {
                  "name":"sort_keys",
                  "types":[
                    {
                      "id":"python;__builtin__.bool",
                      "name":"bool",
                      "examples":null
                    }
                  ]
                },
                {
                  "name":"separators",
                  "types":[
                    {
                      "id":"python;__builtin__.tuple",
                      "name":"tuple",
                      "examples":[
                        "(',', ': ')",
                        "(',', ':')",
                        "(',',':')"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "args":[
            {
              "name":"obj",
              "types":[
                {
                  "id":"python;__builtin__.dict",
                  "name":"dict",
                  "examples":[
                    "{}",
                    "{\"access_token\": access_token,\"access_secret\": access_secret}",
                    "{\"data\": _CACHE, \"metadata\": \"\"}"
                  ]
                },
                {
                  "id":"python;__builtin__.list",
                  "name":"list",
                  "examples":[
                    "[]",
                    "['chrome']",
                    "[test_cost, test_accuracy, training_cost, training_accuracy]"
                  ]
                },
                {
                  "id":"python;...",
                  "name":"",
                  "examples":null
                }
              ]
            },
            {
              "name":"fp",
              "types":[
                {
                  "id":"python;__builtin__.file",
                  "name":"file",
                  "examples":[
                    "open(output, 'w') if output is not None else sys.stdout",
                    "open(args.output_file, 'w') if args.output_file else sys.stdout",
                    "sys.stdout if not optz.dst_file else open(optz.dst_file, 'wb')"
                  ]
                }
              ]
            }
          ],
          "language_details":{
            "python":{
              "kwargs":[
                {
                  "name":"indent",
                  "types":[
                    {
                      "id":"python;__builtin__.int",
                      "name":"int",
                      "examples":[
                        "4",
                        "2",
                        "1"
                      ]
                    }
                  ]
                },
                {
                  "name":"separators",
                  "types":[
                    {
                      "id":"python;__builtin__.tuple",
                      "name":"tuple",
                      "examples":[
                        "(',', ': ')",
                        "(',', ':')",
                        "(',',':')"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "arg_index":0,
      "language_details":{
        "python":{
          "in_kwargs":false
        }
      }
    }
  ]
}
