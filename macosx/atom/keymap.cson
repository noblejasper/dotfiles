# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'atom-text-editor.emacs-plus:not([mini])':
  'ctrl-r': 'unset!'
'.find-and-replace':
  'ctrl-r': 'unset!'
'atom-text-editor':
  'ctrl-e': 'editor:move-to-end-of-line'
  'cmd-h': 'dash:shortcut'
  'cmd-alt-h': 'dash:shortcut-alt'
  'f9': 'bookmarks:view-all'
  'f12': 'bookmarks:jump-to-next-bookmark'
  'f11': 'bookmarks:jump-to-previous-bookmark'
  'f10': 'bookmarks:toggle-bookmark'
'atom-text-editor:not([mini])':
  'ctrl-e': 'editor:move-to-end-of-line'
  'alt->': 'core:move-to-bottom'
'atom-text-editor:not(mini).autocomplete-active':
  'enter': 'autocomplete-plus:confirm'
  'up': 'unset!'
  'down': 'unset!'
  'ctrl-w': 'unset!'
  'ctrl-p': 'core:move-up'
  'ctrl-n': 'core:move-down'
'.platform-darwin':
  'ctrl-g': 'core:cancel'
  'alt-g': 'go-to-line:toggle'
'.platform-darwin atom-text-editor:not([mini])':
  'ctrl-d': 'core:delete'
  'ctrl-w': 'core:cut'
'body':
  'ctrl-tab ^ctrl': 'unset!'
  'ctrl-tab': 'pane:show-next-item'
  'ctrl-shift-tab ^ctrl': 'unset!'
  'ctrl-shift-tab': 'pane:show-previous-item'
