<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2009 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark RadioButton component.  
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabledStates="0.5">

    <fx:Metadata>
    <![CDATA[ 
    /** 
     * @copy spark.skins.spark.ApplicationSkin#hostComponent
     */
        [HostComponent("spark.components.RadioButton")]
    ]]>
    </fx:Metadata> 
    
    <fx:Script>
        <![CDATA[
        /**
         * @inheritDoc
         */
        override public function get focusSkinExclusions():Array {return ["labelDisplay"]};            
        ]]>
    </fx:Script>
    
    <s:states>
        <s:State name="up" />
        <s:State name="over" stateGroups="overStates" />
        <s:State name="down" stateGroups="downStates" />
        <s:State name="disabled" stateGroups="disabledStates" />
        <s:State name="upAndSelected" stateGroups="selectedStates" />
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
        <s:State name="disabledAndSelected" stateGroups="disabledStates, selectedStates" />
    </s:states>
    
    <s:Group verticalCenter="0" width="13" height="13">
        <!--border-->
		<s:Ellipse left="0" top="0" right="0" bottom="0">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0x7B7C7B" 
									 color.overStates="0xBFBFBF" 
									 color.downStates="0xBFBFBF" 
									 alpha="1.0" />
					<s:GradientEntry color="0x7B7C7B" 
									 color.overStates="0x7B7C7B" 
									 color.downStates="0x7B7C7B" 
									 alpha="1.0" />
				</s:LinearGradient>
			</s:fill>
		</s:Ellipse>
		
        <!-- fill -->
        <s:Ellipse left="2" top="2" right="2" bottom="2">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0x6A6B6A" 
									 color.overStates="0x6A6B6A" 
									 color.downStates="0xA0A0A0" 
									 alpha="1.0" />
					<s:GradientEntry color="0x282828" 
									 color.overStates="0x282828" 
									 color.downStates="0x787878"
									 alpha="1.0" />
				</s:LinearGradient>
			</s:fill>
        </s:Ellipse>        
        
        <!-- dot -->
    <!--- Defines the appearance of the RadioButton's dot. To customize the appearance of the dot, create a custom RadioButtonSkin class. -->
       <s:Path left="4" top="4" includeIn="selectedStates" id="dot" itemCreationPolicy="immediate"
             data="M 2.5 0 Q 4.5 0.5 5 2.5 Q 4.5 4.5 2.5 5 Q 0.5 4.5 0 2.5 Q 0.5 0.5 2.5 0">
           <s:fill>
        <!--- Defines the appearance of the dot's fill. The default color is 0x000000. The default alpha is .9. -->
               <s:SolidColor id="dotFill" color="0xFFFFFF" alpha="0.4" />
           </s:fill>
       </s:Path>

    </s:Group>

    <!-- Label -->
    <!--- Defines the text next to the dot in a RadioButton component.-->
    <s:Label id="labelDisplay"
             textAlign="start"
             verticalAlign="middle"
			 maxDisplayedLines="1"
             left="18" right="0" top="3" bottom="3" verticalCenter="2" />

</s:Skin>
