<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2009 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- 
The default skin class for Spark TabBar buttons.  

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->

<s:Skin 
    xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
    minWidth="21" minHeight="21" alpha.disabledStates="0.5">
    
    <!-- host component -->
    <fx:Metadata>
        <![CDATA[ 
        /** 
        * @copy spark.skins.spark.ApplicationSkin#hostComponent
        */
        [HostComponent("spark.components.ButtonBarButton")]
        ]]>
    </fx:Metadata>
    
    <fx:Script fb:purpose="styling" >
        
        import spark.components.TabBar;


        private var cornerRadius:Number = 4
       

        /**
         *  @private
         */
        override protected function updateDisplayList(unscaledWidth:Number, unscaleHeight:Number):void
        {
   
            super.updateDisplayList(unscaledWidth, unscaledHeight);
        }
    </fx:Script>
    
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" stateGroups="overStates" />
        <s:State name="down" stateGroups="downStates" />
        <s:State name="disabled" stateGroups="disabledStates" />
        <s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
        <s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
    </s:states>
    
    <s:Group left="-1" right="0" top="-1" bottom="-1">

		<!-- Layer 1: border -->
		<s:Rect id="border" left="1" right="1" top="1" bottom="1" 
				topLeftRadiusX="3" topRightRadiusX="3">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0x7B7C7B" 
									 color.over="0xBFBFBF" 
									 color.down="0xBFBFBF" 
									 color.selectedStates="0x6A6A6A"
									 alpha="1.0" />
					<s:GradientEntry color="0x7B7C7B" 
									 color.over="0x7B7C7B" 
									 color.down="0x7B7C7B" 
									 color.selectedStates="0x7A7B7A"
									 alpha="1.0" />
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		<!-- Layer 2: innerFill -->
		<s:Rect id="innerFill" left="3" right="3" top="3" bottom="3" bottom.selectedStates="0"
				topLeftRadiusX="2" topRightRadiusX="2">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0x6A6B6A" 
									 color.over="0x6A6B6A" 
									 color.down="0xA0A0A0" 
									 color.selectedStates="0x333333"
									 alpha="1.0" />
					<s:GradientEntry color="0x282828" 
									 color.over="0x282828" 
									 color.down="0x787878"
									 color.selectedStates="0x333333"
									 alpha="1.0" />
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
	</s:Group>
    
    <!-- layer 8: text -->
    <!--- The defines the appearance of the label for the first button in the ButtonBar component. -->
    <s:Label id="labelDisplay"
             textAlign="center"
             verticalAlign="middle"
             maxDisplayedLines="1"
             horizontalCenter="0" verticalCenter="1"
             left="10" right="10" top="2" bottom="2">
    </s:Label>
    
</s:Skin>